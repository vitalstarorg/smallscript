# Generated from SmallScript.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,39,287,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,1,
        0,1,0,3,0,82,8,0,1,0,1,0,1,0,1,1,3,1,88,8,1,1,1,1,1,4,1,92,8,1,11,
        1,12,1,93,1,2,3,2,97,8,2,1,2,4,2,100,8,2,11,2,12,2,101,1,3,3,3,105,
        8,3,1,3,4,3,108,8,3,11,3,12,3,109,1,3,1,3,4,3,114,8,3,11,3,12,3,
        115,1,4,1,4,1,4,5,4,121,8,4,10,4,12,4,124,9,4,1,5,1,5,5,5,128,8,
        5,10,5,12,5,131,9,5,1,5,1,5,1,6,1,6,5,6,137,8,6,10,6,12,6,140,9,
        6,1,6,1,6,1,6,5,6,145,8,6,10,6,12,6,148,9,6,1,6,3,6,151,8,6,1,7,
        1,7,4,7,155,8,7,11,7,12,7,156,1,8,4,8,160,8,8,11,8,12,8,161,1,9,
        4,9,165,8,9,11,9,12,9,166,1,10,1,10,1,10,1,10,5,10,173,8,10,10,10,
        12,10,176,9,10,1,10,5,10,179,8,10,10,10,12,10,182,9,10,1,10,1,10,
        1,10,1,10,4,10,188,8,10,11,10,12,10,189,1,11,1,11,1,11,1,11,1,11,
        5,11,197,8,11,10,11,12,11,200,9,11,1,11,1,11,1,11,1,11,1,12,1,12,
        1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,
        1,19,1,19,4,19,223,8,19,11,19,12,19,224,1,20,1,20,1,21,1,21,1,22,
        1,22,1,23,4,23,234,8,23,11,23,12,23,235,1,23,1,23,5,23,240,8,23,
        10,23,12,23,243,9,23,1,24,1,24,1,25,1,25,1,26,1,26,1,26,1,27,1,27,
        1,28,1,28,1,29,1,29,1,30,1,30,1,30,1,31,1,31,1,31,1,32,1,32,1,32,
        1,33,1,33,1,34,1,34,1,35,1,35,1,36,1,36,1,36,1,37,1,37,1,37,1,38,
        1,38,4,38,281,8,38,11,38,12,38,282,1,38,3,38,286,8,38,4,138,146,
        180,198,0,39,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,
        23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,
        45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,
        67,34,69,35,71,36,73,37,75,38,77,39,1,0,8,2,0,9,9,32,32,2,0,10,10,
        13,13,7,0,37,37,42,44,47,47,60,62,64,64,92,92,126,126,3,0,38,38,
        45,45,63,63,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,
        1,0,48,57,3,0,48,57,65,70,97,102,318,0,1,1,0,0,0,0,3,1,0,0,0,0,5,
        1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,
        0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,
        0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,
        0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,
        0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,
        0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,
        0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,
        0,0,0,0,77,1,0,0,0,1,81,1,0,0,0,3,87,1,0,0,0,5,96,1,0,0,0,7,104,
        1,0,0,0,9,117,1,0,0,0,11,129,1,0,0,0,13,150,1,0,0,0,15,154,1,0,0,
        0,17,159,1,0,0,0,19,164,1,0,0,0,21,187,1,0,0,0,23,191,1,0,0,0,25,
        205,1,0,0,0,27,207,1,0,0,0,29,209,1,0,0,0,31,211,1,0,0,0,33,213,
        1,0,0,0,35,215,1,0,0,0,37,217,1,0,0,0,39,222,1,0,0,0,41,226,1,0,
        0,0,43,228,1,0,0,0,45,230,1,0,0,0,47,233,1,0,0,0,49,244,1,0,0,0,
        51,246,1,0,0,0,53,248,1,0,0,0,55,251,1,0,0,0,57,253,1,0,0,0,59,255,
        1,0,0,0,61,257,1,0,0,0,63,260,1,0,0,0,65,263,1,0,0,0,67,266,1,0,
        0,0,69,268,1,0,0,0,71,270,1,0,0,0,73,272,1,0,0,0,75,275,1,0,0,0,
        77,278,1,0,0,0,79,82,3,7,3,0,80,82,3,5,2,0,81,79,1,0,0,0,81,80,1,
        0,0,0,82,83,1,0,0,0,83,84,3,59,29,0,84,85,3,5,2,0,85,2,1,0,0,0,86,
        88,3,45,22,0,87,86,1,0,0,0,87,88,1,0,0,0,88,89,1,0,0,0,89,91,3,61,
        30,0,90,92,3,71,35,0,91,90,1,0,0,0,92,93,1,0,0,0,93,91,1,0,0,0,93,
        94,1,0,0,0,94,4,1,0,0,0,95,97,3,45,22,0,96,95,1,0,0,0,96,97,1,0,
        0,0,97,99,1,0,0,0,98,100,3,69,34,0,99,98,1,0,0,0,100,101,1,0,0,0,
        101,99,1,0,0,0,101,102,1,0,0,0,102,6,1,0,0,0,103,105,3,45,22,0,104,
        103,1,0,0,0,104,105,1,0,0,0,105,107,1,0,0,0,106,108,3,69,34,0,107,
        106,1,0,0,0,108,109,1,0,0,0,109,107,1,0,0,0,109,110,1,0,0,0,110,
        111,1,0,0,0,111,113,3,35,17,0,112,114,3,69,34,0,113,112,1,0,0,0,
        114,115,1,0,0,0,115,113,1,0,0,0,115,116,1,0,0,0,116,8,1,0,0,0,117,
        122,3,41,20,0,118,121,3,17,8,0,119,121,3,19,9,0,120,118,1,0,0,0,
        120,119,1,0,0,0,121,124,1,0,0,0,122,120,1,0,0,0,122,123,1,0,0,0,
        123,10,1,0,0,0,124,122,1,0,0,0,125,128,3,17,8,0,126,128,3,19,9,0,
        127,125,1,0,0,0,127,126,1,0,0,0,128,131,1,0,0,0,129,127,1,0,0,0,
        129,130,1,0,0,0,130,132,1,0,0,0,131,129,1,0,0,0,132,133,3,43,21,
        0,133,12,1,0,0,0,134,138,5,39,0,0,135,137,9,0,0,0,136,135,1,0,0,
        0,137,140,1,0,0,0,138,139,1,0,0,0,138,136,1,0,0,0,139,141,1,0,0,
        0,140,138,1,0,0,0,141,151,5,39,0,0,142,146,5,34,0,0,143,145,9,0,
        0,0,144,143,1,0,0,0,145,148,1,0,0,0,146,147,1,0,0,0,146,144,1,0,
        0,0,147,149,1,0,0,0,148,146,1,0,0,0,149,151,5,34,0,0,150,134,1,0,
        0,0,150,142,1,0,0,0,151,14,1,0,0,0,152,155,3,17,8,0,153,155,3,19,
        9,0,154,152,1,0,0,0,154,153,1,0,0,0,155,156,1,0,0,0,156,154,1,0,
        0,0,156,157,1,0,0,0,157,16,1,0,0,0,158,160,7,0,0,0,159,158,1,0,0,
        0,160,161,1,0,0,0,161,159,1,0,0,0,161,162,1,0,0,0,162,18,1,0,0,0,
        163,165,7,1,0,0,164,163,1,0,0,0,165,166,1,0,0,0,166,164,1,0,0,0,
        166,167,1,0,0,0,167,20,1,0,0,0,168,169,5,47,0,0,169,170,5,47,0,0,
        170,174,1,0,0,0,171,173,5,47,0,0,172,171,1,0,0,0,173,176,1,0,0,0,
        174,172,1,0,0,0,174,175,1,0,0,0,175,180,1,0,0,0,176,174,1,0,0,0,
        177,179,9,0,0,0,178,177,1,0,0,0,179,182,1,0,0,0,180,181,1,0,0,0,
        180,178,1,0,0,0,181,183,1,0,0,0,182,180,1,0,0,0,183,188,3,19,9,0,
        184,185,3,23,11,0,185,186,3,19,9,0,186,188,1,0,0,0,187,168,1,0,0,
        0,187,184,1,0,0,0,188,189,1,0,0,0,189,187,1,0,0,0,189,190,1,0,0,
        0,190,22,1,0,0,0,191,192,5,39,0,0,192,193,5,39,0,0,193,194,5,39,
        0,0,194,198,1,0,0,0,195,197,9,0,0,0,196,195,1,0,0,0,197,200,1,0,
        0,0,198,199,1,0,0,0,198,196,1,0,0,0,199,201,1,0,0,0,200,198,1,0,
        0,0,201,202,5,39,0,0,202,203,5,39,0,0,203,204,5,39,0,0,204,24,1,
        0,0,0,205,206,5,91,0,0,206,26,1,0,0,0,207,208,5,93,0,0,208,28,1,
        0,0,0,209,210,5,41,0,0,210,30,1,0,0,0,211,212,5,40,0,0,212,32,1,
        0,0,0,213,214,5,124,0,0,214,34,1,0,0,0,215,216,5,46,0,0,216,36,1,
        0,0,0,217,218,5,59,0,0,218,38,1,0,0,0,219,223,7,2,0,0,220,223,3,
        33,16,0,221,223,7,3,0,0,222,219,1,0,0,0,222,220,1,0,0,0,222,221,
        1,0,0,0,223,224,1,0,0,0,224,222,1,0,0,0,224,225,1,0,0,0,225,40,1,
        0,0,0,226,227,5,60,0,0,227,42,1,0,0,0,228,229,5,62,0,0,229,44,1,
        0,0,0,230,231,5,45,0,0,231,46,1,0,0,0,232,234,7,4,0,0,233,232,1,
        0,0,0,234,235,1,0,0,0,235,233,1,0,0,0,235,236,1,0,0,0,236,241,1,
        0,0,0,237,240,7,5,0,0,238,240,3,35,17,0,239,237,1,0,0,0,239,238,
        1,0,0,0,240,243,1,0,0,0,241,239,1,0,0,0,241,242,1,0,0,0,242,48,1,
        0,0,0,243,241,1,0,0,0,244,245,5,94,0,0,245,50,1,0,0,0,246,247,5,
        58,0,0,247,52,1,0,0,0,248,249,5,58,0,0,249,250,5,61,0,0,250,54,1,
        0,0,0,251,252,5,35,0,0,252,56,1,0,0,0,253,254,5,36,0,0,254,58,1,
        0,0,0,255,256,5,101,0,0,256,60,1,0,0,0,257,258,5,48,0,0,258,259,
        5,120,0,0,259,62,1,0,0,0,260,261,5,35,0,0,261,262,5,40,0,0,262,64,
        1,0,0,0,263,264,5,35,0,0,264,265,5,123,0,0,265,66,1,0,0,0,266,267,
        5,125,0,0,267,68,1,0,0,0,268,269,7,6,0,0,269,70,1,0,0,0,270,271,
        7,7,0,0,271,72,1,0,0,0,272,273,3,47,23,0,273,274,3,51,25,0,274,74,
        1,0,0,0,275,276,3,51,25,0,276,277,3,47,23,0,277,76,1,0,0,0,278,285,
        3,57,28,0,279,281,3,71,35,0,280,279,1,0,0,0,281,282,1,0,0,0,282,
        280,1,0,0,0,282,283,1,0,0,0,283,286,1,0,0,0,284,286,3,57,28,0,285,
        280,1,0,0,0,285,284,1,0,0,0,286,78,1,0,0,0,32,0,81,87,93,96,101,
        104,109,115,120,122,127,129,138,146,150,154,156,161,166,174,180,
        187,189,198,222,224,235,239,241,282,285,0
    ]

class SmallScriptLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    NUMEXP = 1
    HEX_ = 2
    ST_INT = 3
    ST_FLOAT = 4
    P_START = 5
    P_END = 6
    STRING = 7
    WS = 8
    SPACES = 9
    CR = 10
    COMMENT = 11
    HEREDOC = 12
    BLK_START = 13
    BLK_END = 14
    CLOSE_PAREN = 15
    OPEN_PAREN = 16
    PIPE = 17
    PERIOD = 18
    SEMI = 19
    BIN_OP = 20
    LT = 21
    GT = 22
    MINUS = 23
    IDENT = 24
    CARROT = 25
    COLON = 26
    ASSIGN = 27
    HASH = 28
    DOLLAR = 29
    EXP = 30
    HEX = 31
    LITARR_START = 32
    DYNARR_START = 33
    DYNARR_END = 34
    DIGIT = 35
    HEXDIGIT = 36
    KEYWORD = 37
    BLK_PARAM = 38
    CHAR = 39

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'['", "']'", "')'", "'('", "'|'", "'.'", "';'", "'<'", "'>'", 
            "'-'", "'^'", "':'", "':='", "'#'", "'$'", "'e'", "'0x'", "'#('", 
            "'#{'", "'}'" ]

    symbolicNames = [ "<INVALID>",
            "NUMEXP", "HEX_", "ST_INT", "ST_FLOAT", "P_START", "P_END", 
            "STRING", "WS", "SPACES", "CR", "COMMENT", "HEREDOC", "BLK_START", 
            "BLK_END", "CLOSE_PAREN", "OPEN_PAREN", "PIPE", "PERIOD", "SEMI", 
            "BIN_OP", "LT", "GT", "MINUS", "IDENT", "CARROT", "COLON", "ASSIGN", 
            "HASH", "DOLLAR", "EXP", "HEX", "LITARR_START", "DYNARR_START", 
            "DYNARR_END", "DIGIT", "HEXDIGIT", "KEYWORD", "BLK_PARAM", "CHAR" ]

    ruleNames = [ "NUMEXP", "HEX_", "ST_INT", "ST_FLOAT", "P_START", "P_END", 
                  "STRING", "WS", "SPACES", "CR", "COMMENT", "HEREDOC", 
                  "BLK_START", "BLK_END", "CLOSE_PAREN", "OPEN_PAREN", "PIPE", 
                  "PERIOD", "SEMI", "BIN_OP", "LT", "GT", "MINUS", "IDENT", 
                  "CARROT", "COLON", "ASSIGN", "HASH", "DOLLAR", "EXP", 
                  "HEX", "LITARR_START", "DYNARR_START", "DYNARR_END", "DIGIT", 
                  "HEXDIGIT", "KEYWORD", "BLK_PARAM", "CHAR" ]

    grammarFileName = "SmallScript.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


